syntax = "proto3";

package raftcomm;

option go_package="internal/proto;raftcomm";

message AppendEntriesRequest {
  // Leader’s term.
  uint32 Term = 1;

  // Leader’s ID so follower can redirect clients if necessary.
  string LeaderId = 2;

  // Index of log entry immediately preceding new ones.
  uint32 PrevLogIndex = 3;

  // Term of the entry at PrevLogIndex.
  uint32 PrevLogTerm = 4;

  // Log entries to store on the follower.
  // - Empty for heartbeat
  // - May contain multiple entries for efficiency.
  repeated LogEntry Entries = 5;

  // Leader’s commitIndex: once follower’s log is updated, it can advance
  // its commit index up to this value.
  uint32 LeaderCommit = 6;
}

message AppendEntriesResponse {
  // Follower’s currentTerm (so leader can update itself if needed).
  uint32 Term = 1;

  // True if follower’s log contained an entry at PrevLogIndex whose
  // term matched PrevLogTerm. In that case, the follower appends any new
  // entries and advances its commit index; otherwise, it rejects the append.
  bool Success = 2;
}

message LogEntry {
  bytes Command = 1;
  uint32 LogTerm = 2;
  uint32 LogIndex = 3;
}
