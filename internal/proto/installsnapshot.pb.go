// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: installsnapshot.proto

package raftcomm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstallSnapshotRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Leader’s current term.
	Term uint32 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	// Leader’s ID so follower can redirect clients.
	LeaderId string `protobuf:"bytes,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	// Snapshot replaces all log entries up through and including this index.
	LastIncludedIndex uint32 `protobuf:"varint,3,opt,name=LastIncludedIndex,proto3" json:"LastIncludedIndex,omitempty"`
	// Term of the last included log entry.
	LastIncludedTerm uint32 `protobuf:"varint,4,opt,name=LastIncludedTerm,proto3" json:"LastIncludedTerm,omitempty"`
	// Byte offset where this chunk is positioned in the snapshot file.
	Offset uint32 `protobuf:"varint,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	// Raw bytes of the snapshot chunk, starting at the given offset.
	Data []byte `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
	// True if this is the final chunk of the snapshot.
	Done          bool `protobuf:"varint,7,opt,name=Done,proto3" json:"Done,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotRequest) Reset() {
	*x = InstallSnapshotRequest{}
	mi := &file_installsnapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotRequest) ProtoMessage() {}

func (x *InstallSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_installsnapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotRequest.ProtoReflect.Descriptor instead.
func (*InstallSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_installsnapshot_proto_rawDescGZIP(), []int{0}
}

func (x *InstallSnapshotRequest) GetTerm() uint32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *InstallSnapshotRequest) GetLastIncludedIndex() uint32 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLastIncludedTerm() uint32 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *InstallSnapshotRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *InstallSnapshotRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InstallSnapshotRequest) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type InstallSnapshotResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Follower’s current term, for leader to update itself if it’s behind.
	Term          uint32 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotResponse) Reset() {
	*x = InstallSnapshotResponse{}
	mi := &file_installsnapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotResponse) ProtoMessage() {}

func (x *InstallSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_installsnapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotResponse.ProtoReflect.Descriptor instead.
func (*InstallSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_installsnapshot_proto_rawDescGZIP(), []int{1}
}

func (x *InstallSnapshotResponse) GetTerm() uint32 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_installsnapshot_proto protoreflect.FileDescriptor

const file_installsnapshot_proto_rawDesc = "" +
	"\n" +
	"\x15installsnapshot.proto\x12\braftcomm\"\xe2\x01\n" +
	"\x16InstallSnapshotRequest\x12\x12\n" +
	"\x04Term\x18\x01 \x01(\rR\x04Term\x12\x1a\n" +
	"\bLeaderId\x18\x02 \x01(\tR\bLeaderId\x12,\n" +
	"\x11LastIncludedIndex\x18\x03 \x01(\rR\x11LastIncludedIndex\x12*\n" +
	"\x10LastIncludedTerm\x18\x04 \x01(\rR\x10LastIncludedTerm\x12\x16\n" +
	"\x06Offset\x18\x05 \x01(\rR\x06Offset\x12\x12\n" +
	"\x04Data\x18\x06 \x01(\fR\x04Data\x12\x12\n" +
	"\x04Done\x18\a \x01(\bR\x04Done\"-\n" +
	"\x17InstallSnapshotResponse\x12\x12\n" +
	"\x04Term\x18\x01 \x01(\rR\x04TermB\x19Z\x17internal/proto;raftcommb\x06proto3"

var (
	file_installsnapshot_proto_rawDescOnce sync.Once
	file_installsnapshot_proto_rawDescData []byte
)

func file_installsnapshot_proto_rawDescGZIP() []byte {
	file_installsnapshot_proto_rawDescOnce.Do(func() {
		file_installsnapshot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_installsnapshot_proto_rawDesc), len(file_installsnapshot_proto_rawDesc)))
	})
	return file_installsnapshot_proto_rawDescData
}

var file_installsnapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_installsnapshot_proto_goTypes = []any{
	(*InstallSnapshotRequest)(nil),  // 0: raftcomm.InstallSnapshotRequest
	(*InstallSnapshotResponse)(nil), // 1: raftcomm.InstallSnapshotResponse
}
var file_installsnapshot_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_installsnapshot_proto_init() }
func file_installsnapshot_proto_init() {
	if File_installsnapshot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_installsnapshot_proto_rawDesc), len(file_installsnapshot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_installsnapshot_proto_goTypes,
		DependencyIndexes: file_installsnapshot_proto_depIdxs,
		MessageInfos:      file_installsnapshot_proto_msgTypes,
	}.Build()
	File_installsnapshot_proto = out.File
	file_installsnapshot_proto_goTypes = nil
	file_installsnapshot_proto_depIdxs = nil
}
